<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">
    <Adapter name="ShadowAnalitics" description="">
        <Receiver name="ShadowAnalitics">
            <ApiListener name="ShadowAnaliticsListener" uriPattern="${haalcentraal_connector.shadow.analitics.endpoint}" method="GET"/>
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="READY" state="SUCCESS" code="200"/>
            </Exits>

            <ResultSetIteratingPipe name="CompareMatchedContent" query="
                    SELECT not_frank.ID, not_frank.message as expected, frank.message as actual FROM (SELECT * FROM shadowmessages WHERE is_frank = true) as frank, (SELECT * FROM shadowmessages WHERE is_frank = false) as not_frank
                    WHERE frank.bsn = not_frank.bsn
                    AND frank.app_id = not_frank.app_id
                    AND ABS(EXTRACT(EPOCH FROM (DATE_TRUNC('second', frank.timestamp) - DATE_TRUNC('second', not_frank.timestamp)))) &lt;= 48 * 3600 
                " blobSmartGet="true">
                <IbisLocalSender name="CompareContentSender" javaListener="CompareShadowMessage">
                    <Param name="expected" xpathExpression="//field[@name='EXPECTED']/text()"/>
                    <Param name="actual" xpathExpression="//field[@name='ACTUAL']/text()"/>
                </IbisLocalSender>
            </ResultSetIteratingPipe>

            <!-- Get all rows where multiple is_frank=false are found for a row with is_frank=true -->
            <!-- <SenderPipe name="GetDuplicateMatches">
                <FixedQuerySender name="RetrieveDuplicateIds" queryType="SELECT" query="
                    SELECT id, bsn, app_id FROM shadowmessages WHERE is_frank = false AND bsn IN (
                        SELECT bsn FROM shadowmessages WHERE is_frank = true GROUP BY bsn HAVING COUNT(bsn) > 1
                    )
                "/>
            </SenderPipe> -->
            
            <!-- <XsltPipe name="MakePretty" styleSheetName="xsl/prettifier.xsl" outputType="XML" /> -->
        </Pipeline>
    </Adapter>
</Module>