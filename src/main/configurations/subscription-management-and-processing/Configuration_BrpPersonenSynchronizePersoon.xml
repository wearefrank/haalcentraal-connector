<Adapter name="BrpPersonenSynchronizePersoon" description="BRP Personen Synchronize Persoon">
    <Pipeline>
        <Exits>
            <Exit name="Exit" state="SUCCESS" />
            <Exit name="Exception" state="ERROR" />
            <Exit name="BadRequest" state="ERROR" code="400" />
            <Exit name="NotAuthorized" state="ERROR" code="401" />
            <Exit name="Forbidden" state="ERROR" code="403" />
            <Exit name="NotFound" state="ERROR" code="404" />
            <Exit name="NotAcceptable" state="ERROR" code="406" />
            <Exit name="UnsupportedMediaType" state="ERROR" code="415" />
            <Exit name="TooManyRequest" state="ERROR" code="429" />
            <Exit name="ServerError" state="ERROR" code="500" />
            <Exit name="ServiceUnavailable" state="ERROR" code="503" />
        </Exits>

        <!-- Retrieve stored person record from database -->
        <SenderPipe name="GetStoredPersonRecord" storeResultInSessionKey="storedPersonRecord">
            <FixedQuerySender
                name="getPersonenSender"
                queryType="SELECT"
                query="SELECT * FROM persoonsgegevens WHERE bsn=?{bsn} ORDER BY registratie_datum DESC LIMIT 1"
                includeFieldDefinition="false">
                <Param name="bsn"/>
            </FixedQuerySender>
        </SenderPipe>

        <!-- Create request for BRP system using XSLT -->
        <XsltPipe name="CreateRequest" styleSheetName="xsl/personenRequest.xslt" skipEmptyTags="true">
            <Param name="burgerservicenummer" sessionKey="originalMessage" />
        </XsltPipe>

        <!-- Validate and transform input data to JSON format -->
        <Json2XmlValidatorPipe
            name="XmlToJson"
            root="root"
            schema="xsd/checkInput.xsd"
            outputFormat="JSON"
            compactJsonArrays="false"
            storeResultInSessionKey="validatedInput"
            throwException="true">
        </Json2XmlValidatorPipe>

        <!-- Retrieve new data from BRP system -->
        <SenderPipe name="GetPersoon" storeResultInSessionKey="currentPersonData"
                    maxRetries="3" retryMinInterval="60" retryMaxInterval="240">
            <IbisLocalSender name="GetPersoonSender" javaListener="BrpPbOutwayListener" />
            <Forward name="success" path="CheckResult" />
            <Forward name="exception" path="ServerError" />
            <Forward name="timeout" path="ServerError" />
        </SenderPipe>

		<!-- Check if person was found -->
        <IfPipe defaultMediaType="JSON" name="CheckResult" jsonPathExpression="$.personen[0].burgerservicenummer" expressionValue="${bsn}">
            <Forward name="then" path="JsonComparator" />
            <Forward name="else" path="PersoonNotFound_Exception" />
            <Param name="bsn" sessionKey="originalMessage" />
        </IfPipe>

        <XsltPipe
            name="PersoonNotFound_Exception"
            getInputFromFixedValue="&lt;dummy/&gt;"
            styleSheetName="xsl/BuildError.xsl"
            storeResultInSessionKey="Error"
            >
            <Param name="cause" sessionKey="Error" type="DOMDOC" />
            <Param name="reason" pattern="No Persoon with the burgerservicenummer:{originalMessage} is found." ignoreUnresolvablePatternElements="true"/>
            <Param name="detailsXml" type="DOMDOC" />
            <Forward name="success" path="NotFound" />
            <Forward name="exception" path="NotFound" />
        </XsltPipe>

        <!-- Compare stored and retrieved person data -->
        <SenderPipe name="JsonComparator">
            <JavascriptSender
                jsFileName="JSONcompare.js"
                jsFunctionName="compareJsonObjects">
            </JavascriptSender>
            <Param name="storedPersonRecord" sessionKey="storedPersonRecord"
                   xpathExpression="result/rowset/row/field[@name='DATA']" />
            <Param name="currentPersonData" sessionKey="currentPersonData" />
        </SenderPipe>

        <!-- Conditional check to insert new data if changes are detected -->
        <IfPipe name="ShouldInsert" expressionValue="true">
            <Forward name="then" path="InsertPersoon" />
            <Forward name="else" path="NotUpdatedExit" />
        </IfPipe>


        <!-- Insert the new data into the database -->
        <SenderPipe name="InsertPersoon" preserveInput="true">
            <FixedQuerySender
                name="insertPersonenSender"
                query="INSERT INTO persoonsgegevens(bsn, data, registratie_datum) VALUES(?,?,CURRENT_TIMESTAMP)">
                <Param name="bsn" sessionKey="originalMessage" />
                <Param name="data" sessionKey="currentPersonData" />
            </FixedQuerySender>
        </SenderPipe>

        <EchoPipe name="UpdatedExit" getInputFromFixedValue="true">
            <Forward name="success" path="Exit" />
        </EchoPipe>
        
        <EchoPipe name="NotUpdatedExit" getInputFromFixedValue="false" />
    </Pipeline>
</Adapter>