<Module>
    <Adapter name="BulkImportSubscriptions">
        <Receiver name="BulkImportSubscriptionsReceiver">
            <JavaListener name="BulkImportSubscriptionsListener"/>
        </Receiver>
        <Pipeline>
            <CsvParserPipe name="Csv2Xml" storeResultInSessionKey="newSubscriptions"/>

            <ForEachChildElementPipe name="ForEachNewPerson" elementXPathExpression="csv/record" ignoreExceptions="true">
                <SenderSeriesSender>
                    <XsltSender name="ExtractBsn" xpathExpression="record/INP_BSN" />
                    <IbisLocalSender name="InsertNewPersonSender" javaListener="BrpPersonenSynchronizePersoon" />
                </SenderSeriesSender>
            </ForEachChildElementPipe>

            <!--Get all persons that failed, so we can prevent adding their subscriptions-->
            <XsltPipe name="CollectPersonErrors" storeResultInSessionKey="personErrors" styleSheetName="xsl/computePersonResults.xsl">
                <Param name="newSubscriptions" sessionKey="newSubscriptions"/>
            </XsltPipe>

            <SenderPipe name="GetOldSubscriptions">
                <FixedQuerySender name="GetOldSubscriptionsSender" queryType="SELECT" query="SELECT id,app_id,bsn FROM subscripties"/>
            </SenderPipe>

            <XsltPipe name="ComputeSubscriptionStates" storeResultInSessionKey="subscriptionStates" styleSheetName="xsl/computeSubscriptionStates.xsl">
                <Param name="newSubscriptions" sessionKey="newSubscriptions" type="DOMDOC"/>
                <Param name="personErrors" sessionKey="personErrors" type="DOMDOC"/>
            </XsltPipe>

            <!--This will insert the subscriptions that don't yet exist-->
            <ForEachChildElementPipe name="ForEachSubscriptionToBeAdded" storeResultInSessionKey="addSubscriptionsResult" elementXPathExpression="root/toBeAdded/record" ignoreExceptions="true">
                <FixedQuerySender name="StoreNewSubscription" query="INSERT INTO subscripties (bsn, app_id)
                                  SELECT ?{bsn}, ?{app_id}">
                    <!--WHERE NOT EXISTS (SELECT 1 FROM subscripties WHERE bsn = ?{bsn} AND app_id = ?{app_id})-->
                    <Param name="bsn" xpathExpression="record/bsn"/>
                    <Param name="app_id" xpathExpression="record/app_id"/>
                </FixedQuerySender>
            </ForEachChildElementPipe>

            <ForEachChildElementPipe name="ForEachSubscriptionToDelete" getInputFromSessionKey="subscriptionStates" elementXPathExpression="root/toBeRemoved/record" ignoreExceptions="true">
                <FixedQuerySender name="DeleteSubscription" query="DELETE FROM subscripties
                                        WHERE bsn = ?
                                        AND app_id = ?">
                    <Param name="bsn" xpathExpression="record/bsn"/>
                    <Param name="app_id" xpathExpression="record/app_id"/>
                </FixedQuerySender>
            </ForEachChildElementPipe>

            <XsltPipe name="generateReport" getInputFromSessionKey="subscriptionStates" styleSheetName="xsl/generateReport.xsl">
                <Param name="addSubscriptionsResult" sessionKey="addSubscriptionsResult" type="DOMDOC"/>
            </XsltPipe>
        </Pipeline>
    </Adapter>
</Module>
