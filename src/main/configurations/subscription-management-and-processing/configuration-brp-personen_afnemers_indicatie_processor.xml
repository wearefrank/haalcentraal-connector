<Module 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">

	<Adapter name="brp personen afnemers indicatie processor"
		description="brp personen afnemers indicatie processor">

		<Receiver name="brp personen afnemers indicatie processor" checkForDuplicates="true" maxRetries="0" >
			<MessageStoreListener slotId="${instance.name}/afnemersIndicatieStore" statusValueInProcess="I"/>
		</Receiver>

		<Pipeline>
			<Exits>
				<Exit name="EXIT" state="SUCCESS" />
				<Exit name="EXCEPTION" state="ERROR" />
			</Exits>

            <!-- Retrieve the application configuration from the local file system -->
            <SenderPipe 
                name="GetApplicationConfigFromLocalFS"
                storeResultInSessionKey="ApplicationConfig"
                >
                <IbisLocalSender
                    name="CallImportFromLocalFS"
                    javaListener="ImportFromLocalFS"
                    returnedSessionKeys="Error">
                    <Param name="FileName" value="${FilePath_1}" />
                </IbisLocalSender>
                <Forward name="success" path="GetPersoon"/>
                <Forward name="exception" path="EXCEPTION" />
            </SenderPipe>

            <!-- Retrieve the person, and its subscribers with the given BSN -->
            <SenderPipe name="RetrieveSubscribersFromBSN" storeResultInSessionKey="databaseData">
                <FixedQuerySender
					name="getPersonenSender"
                    queryType="SELECT"
					query="SELECT * FROM persoonsgegevens,applicaties WHERE persoonsgegevens.bsn=?{burgerservicenummer} AND applicaties.bsn = persoonsgegevens.bsn"
					includeFieldDefinition="false">
					<Param name="burgerservicenummer" sessionKey="originalMessage" xpathExpression="npsLk01/object/inp.bsn" type="INTEGER"/>
            	</FixedQuerySender> 
                <Forward name="success" path="checkPersonen" />
                <Forward name="exception" path="EXCEPTION" />
            </SenderPipe>    

            <!-- Check if a person was found with the given BSN -->
            <XmlIfPipe name="PersonExistsCheck" xpathExpression="/result/rowset/row">
                <Forward name="then" path="getAppIds" />
                <Forward name="else" path="noPersonFoundWithGivenBsn" />
            </XmlIfPipe>      
            
            <!-- Extract the subscribers to the given BSN -->
            <XsltPipe name="GetSubscribers" getInputFromSessionKey="databaseData" xpathExpression="result/rowset/row/field[@name='applicaties.id']/text()">
                <Forward name="success" path="Json2Xml" />
            </XsltPipe>

            <!-- Convert the subscribers to XML -->
            <JsonPipe name="ConvertSubscribersToXML" direction="JSON2XML" storeResultInSessionKey="appid">
                <Forward name="succes" path="filter"/>
            </JsonPipe>

            <!-- Merge the new subscriber with the old subscribers -->
            <XsltPipe
				getInputFromSessionKey="ApplicationConfig"
                name="AppendNewSubscribers"
                styleSheetName="xsl/mergeAppID.xslt"
                storeResultInSessionKey="newAppidData"
                >
				<Param name="sleutelVerzendend" sessionKey="originalMessage" xpathExpression="npsLk01/object/@sleutelVerzendend"/>
				<Param name="code" sessionKey="originalMessage" xpathExpression="npsLk01/stuurgegevens/zender/organisatie"/>
				<Param name="appid" sessionKey="appid" type="DOMDOC" />
				<Param name="verwerkingssoort" sessionKey="originalMessage" xpathExpression="npsLk01/object/@verwerkingssoort"/>
                <Forward name="success" path="isEqual"/>
                <Forward name="exception" path="EXCEPTION"/>
            </XsltPipe>

            <!-- Check if the new subscribers are equal to the old subscribers -->
            <XmlIfPipe name="CheckIfSubscribersChanged" xpathExpression="count($oldAppidData/root/*) = count($newAppidData/Applications/*)">
                <Param name="newAppidData" sessionKey="newAppidData" type="DOMDOC"/>
                <Param name="oldAppidData" sessionKey="appid" type="DOMDOC"/>
                <Forward name="then" path="noChangeException" />
                <Forward name="else" path="XmlToJson" />
            </XmlIfPipe>

            <!-- Convert the new subscribers to JSON -->
            <Json2XmlValidatorPipe
                name="ConvertNewSubscribersToJson"
                root="Applications"
                schema="xsd/appId.xsd"
                outputFormat="JSON"
                compactJsonArrays="false"
                storeResultInSessionKey="storeInput"
                throwException="true">
                <Forward name="success" path="InsertPersoon" />
            </Json2XmlValidatorPipe>

            <!-- Insert the new subscribers into the database -->
            <SenderPipe name="InsertNewSubscribers" getInputFromSessionKey="originalMessage">
                <FixedQuerySender
					name="insertPersonenSender"
					query="INSERT INTO persoonsgegevens VALUES(?,?,CURRENT_TIMESTAMP)">
					<Param name="burgerservicenummer" sessionKey="originalMessage" xpathExpression="npsLk01/object/inp.bsn"/>
					<Param name="body" sessionKey="databaseData" xpathExpression="result/rowset/row/field[@name='BODY']/text()"/>
					<Param name="appId" sessionKey="storeInput"/>
            	</FixedQuerySender>
                <Forward name="success" path="EXIT" />
            </SenderPipe>

            <!-- Exception handling -->
            <XmlIfPipe name="noChangeException" xpathExpression="$originalMessage/npsLk01/object/@verwerkingssoort = 'T'">
                <Param name="originalMessage" sessionKey="originalMessage" type="DOMDOC"/>
                <Forward name="then" path="noSubscriptionAdded" />
                <Forward name="else" path="noSubscriptionDeleted" />
            </XmlIfPipe>
            
            <ExceptionPipe name="noPersonFoundWithGivenBsn"/>
            <ExceptionPipe name="noSubscriptionAdded"/>
            <ExceptionPipe name="noSubscriptionDeleted"/>

		</Pipeline>
	</Adapter>
</Module>