<Module
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../FrankConfig.xsd"> 
	<Adapter name="BrpPersonenUpdate"
		description="BrpPersonenUpdate">

		<Receiver name="BrpPersonenUpdate">
			<JavaListener name="BrpPersonenUpdate" />
		</Receiver>

        <Pipeline>
			<Exits>
				<Exit name="EXIT" state="SUCCESS" code="200"/>
				<Exit name="EXCEPTION" state="ERROR" code="500"/>
				<Exit name="BADREQUEST" state="ERROR" code="400" />
			</Exits>

            <JsonPipe name="JsonToXmlInput"/>

            <SenderPipe name="GetPersoon" storeResultInSessionKey="oldJSON">
                <FixedQuerySender
					name="getPersonenSender"
                    queryType="SELECT"
					query="SELECT * FROM persoonsgegevens WHERE bsn=?{burgerservicenummer} ORDER BY registratie_datum DESC LIMIT 1"
					includeFieldDefinition="false">
					<Param name="burgerservicenummer" sessionKey="burgerservicenummer"/>
            	</FixedQuerySender>
            </SenderPipe>

            <XsltPipe
                name="CreateRequest"
                styleSheetName="xsl/personenRequest.xslt"
				skipEmptyTags="true">
                <Param name="burgerservicenummer" sessionKey="burgerservicenummer" />
            </XsltPipe>

            <JsonPipe name="xml2json" direction="XML2JSON"/>

			<SenderPipe name="GetPersoon" storeResultInSessionKey="newJSON">
                <IbisLocalSender name="GetPersoonSender" javaListener="BrpPbOutwayListener"/>
				<Forward name="success" path="json2xml" />
				<Forward name="exception" path="BADREQUEST" />
			</SenderPipe>

            <JsonPipe name="json2xml"/>
            
            <PutInSessionPipe 
                name="storeBsnInSession">
                <Param name="burgerservicenummer" xpathExpression='//burgerservicenummer/text()' />
            </PutInSessionPipe>
            
            <!-- returns true if it's a subset, else returns a combined json version that can be immediately put in the database-->
			<SenderPipe name="JsonComparer">
				<JavascriptSender
                    jsFileName="JSONcompare.js"
                    jsFunctionName="compareJSONFiles"
				>
				</JavascriptSender>
				<Param name="oldJSON" sessionKey="oldJSON" xpathExpression="result/rowset/row/field[@name='DATA']"/>
				<Param name="newJSON" sessionKey="newJSON"/>
			</SenderPipe>

            <SenderPipe name="InsertPersoon" preserveInput="true">
                <FixedQuerySender
					name="insertPersonenSender"
					query="INSERT INTO persoonsgegevens(bsn, data, registratie_datum) VALUES(?{bsn},?{data},CURRENT_TIMESTAMP)
						ON DUPLICATE KEY UPDATE data=?{data}">
					<Param name="bsn" sessionKey="burgerservicenummer"/>
					<Param name="data" sessionKey="json"/>
            	</FixedQuerySender>
            </SenderPipe>

			<JsonPipe name="json2xml"/>

            <SenderPipe name="GetApplicationConfigFromLocalFS"
                storeResultInSessionKey="ApplicationConfig"
            >
                <IbisLocalSender
                    name="CallImportFromLocalFS"
                    javaListener="ProcessFileInputListener"
                    returnedSessionKeys="Error">
                    <Param name="FileName" value="${applicationConfigPath}" />
                </IbisLocalSender>
                <Forward name="success" path="GetSubscribersForUpdatedPerson"/>
                <Forward name="error" path="EXCEPTION"/>
            </SenderPipe>

            <!-- Retrieve all subscribers to the given bsn -->
            <SenderPipe name="GetSubscribersForUpdatedPerson">
                <FixedQuerySender 
                    name="GetSubscribersByBsnQuery"
                    queryType="SELECT"
                    query="SELECT app_id FROM subscripties WHERE bsn=? AND eind_datum IS NULL">
                    <Param name="burgerservicenummer" sessionKey="burgerservicenummer"/>
                </FixedQuerySender>
                <Forward name="success" path="EXIT" />
            </SenderPipe>

            <!-- TODO: Check if notifications need to be sent -->

            <!-- TODO: Map application_id to callback uri's -->
            
            <!-- TODO: Send updated data to callback uri's  -->

            <ExceptionPipe name="NoUpdateFound" />
        </Pipeline>
    </Adapter>
</Module>